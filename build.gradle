buildscript {
    repositories {
        mavenLocal()
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.2'
    }
}
plugins {
    id 'digital.wup.android-maven-publish' version '3.3.0' apply false
}

// define dependency versions for this project
ext.deps = [
        advrecyclerview      : '0.10.6',
        androidSupport       : '27.1.1',
        androidTestingSupport: '0.5',
        crashlytics          : '2.9.2',
        eventbus             : '3.0.0',
        facebookStetho       : '1.5.0',
        gson                 : '2.8.4',
        guava                : '25.0-android',
        hamcrest             : '1.3',
        jsonUnit             : '1.29.0',
        junit                : '4.12',
        leakcanary           : '1.5.4',
        lightweightStream    : '1.2.0',
        mockito              : '2.18.0',
        okhttp3              : '3.10.0',
        picasso              : '2.5.2',
        powermock            : '2.0.0-beta.9',
        retrofit2            : '2.4.0',
        thekey               : '1.2.0',
        timber               : '4.7.0'
]

subprojects {
    apply plugin: 'com.android.library'

    group 'org.ccci.gto.android'
    version '1.2.0-SNAPSHOT'

    repositories {
        mavenLocal()
        jcenter()
        google()
        maven {
            name "maven.gcx.org"
            url "https://maven.gcx.org/"
            credentials {
                username gcxMavenRepositoryUsername
                password gcxMavenRepositoryPassword
            }
        }
        maven { url 'https://maven.fabric.io/public' }
        // XXX: temporary to use beta version of powermock
        maven { url 'https://dl.bintray.com/powermock/maven' }
    }

    beforeEvaluate {
        android {
            compileSdkVersion 27

            defaultConfig {
                minSdkVersion 14
                targetSdkVersion 27

                consumerProguardFiles "$rootProject.projectDir/proguard-consumer-jetbrains.pro"

                testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
            }

            adbOptions {
               timeOutInMs 600000
            }
            compileOptions {
                sourceCompatibility JavaVersion.VERSION_1_8
                targetCompatibility JavaVersion.VERSION_1_8
            }
            dexOptions {
                preDexLibraries !project.hasProperty('disablePreDex')
            }
        }

        dependencies {
            compileOnly 'org.jetbrains:annotations:15.0'
            compileOnly "com.android.support:support-annotations:${deps.androidSupport}"

            androidTestImplementation "com.android.support.test:runner:${deps.androidTestingSupport}"
            androidTestImplementation "com.android.support.test:rules:${deps.androidTestingSupport}"
            androidTestImplementation "org.hamcrest:hamcrest-library:${deps.hamcrest}"
        }
    }

    // configure checkstyle
    apply plugin: 'checkstyle'
    checkstyle {
        toolVersion '7.8.2'
    }
    task checkstyle(type: Checkstyle) {
        configFile rootProject.file('config/checkstyle/checkstyle.xml')
        source 'src'
        include '*/java/**/*.java'
        ignoreFailures false
        showViolations true

        classpath = files()
    }
    afterEvaluate {
        if (project.tasks.findByName('check')) {
            check.dependsOn('checkstyle')
        }
    }

    // configure publishing
    apply plugin: 'digital.wup.android-maven-publish'
    task sourcesJar(type: Jar) {
        from android.sourceSets.main.java.srcDirs
    }
    publishing {
        publications {
            release(MavenPublication) {
                from components.android
                pom.withXml {
                    def scm = asNode().appendNode('scm')
                    scm.appendNode('connection', POM_SCM_CONNECTION)
                    scm.appendNode('developerConnection', POM_SCM_CONNECTION)
                }

                artifact sourcesJar {
                    classifier 'sources'
                }
            }
        }
        repositories {
            maven {
                if (project.version.endsWith('-SNAPSHOT')) {
                    url "https://cruglobal.jfrog.io/cruglobal/list/maven-cru-android-public-snapshots-local/"
                } else {
                    url "https://cruglobal.jfrog.io/cruglobal/list/maven-cru-android-public-releases-local/"
                }

                credentials {
                    username cruGlobalMavenRepositoryUsername
                    password cruGlobalMavenRepositoryPassword
                }
            }
        }
    }
}
