buildscript {
    // define dependency versions for this project
    ext.deps = [
            advrecyclerview     : '0.11.0',
            androidX            : [
                    annotation        : '1.0.0',
                    appCompat         : '1.0.0',
                    collection        : '1.0.0',
                    fragment          : '1.0.0',
                    loader            : '1.0.0',
                    recyclerView      : '1.0.0',
                    room              : '2.0.0-rc01',
                    swipeRefreshLayout: '1.0.0',
                    test              : '1.1.0-alpha4',
                    viewPager         : '1.0.0',
            ],
            crashlytics         : '2.9.5',
            eventbus            : '3.1.1',
            facebookStetho      : '1.5.0',
            gradle              : [
                    androidPlugin: '3.3.1',
            ],
            gson                : '2.8.5',
            guava               : '26.0-android',
            hamcrest            : '1.3',
            jetbrainsAnnotations: '16.0.1',
            jsonUnit            : '1.31.1',
            junit               : '4.12',
            kotlin              : '1.3.21',
            ktlint              : '0.29.0',
            leakcanary          : '1.6.1',
            lightweightStream   : '1.2.1',
            materialDesign      : '1.0.0',
            mockito             : '2.18.0',
            okhttp3             : '3.11.0',
            picasso             : '2.5.2',
            powermock           : '2.0.0-beta.9',
            realm               : '5.9.0',
            realmAdapters       : '3.1.0',
            retrofit2           : '2.4.0',
            snowplow            : '0.8.0',
            thekey              : '3.0.0',
            timber              : '4.7.1'
    ]

    repositories {
        google()
        jcenter()
        mavenLocal()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:${deps.gradle.androidPlugin}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${deps.kotlin}"
    }
}
plugins {
    id 'digital.wup.android-maven-publish' version '3.6.2' apply false
}

subprojects {
    apply plugin: 'com.android.library'

    group 'org.ccci.gto.android'
    version '2.1.0-SNAPSHOT'

    repositories {
        google()
        maven { url 'https://maven.fabric.io/public' }
        // XXX: temporary to use beta version of powermock
        maven { url 'https://dl.bintray.com/powermock/maven' }
        maven { url "https://jitpack.io" }
        jcenter()
        maven { url 'https://cruglobal.jfrog.io/cruglobal/list/maven-locals/' }
        mavenLocal()
    }

    beforeEvaluate {
        android {
            compileSdkVersion 28

            defaultConfig {
                minSdkVersion 14
                targetSdkVersion 28

                consumerProguardFiles "$rootProject.projectDir/proguard-consumer-jetbrains.pro"

                testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
            }

            adbOptions {
               timeOutInMs 600000
            }
            compileOptions {
                sourceCompatibility JavaVersion.VERSION_1_8
                targetCompatibility JavaVersion.VERSION_1_8
            }
            dexOptions {
                preDexLibraries !project.hasProperty('disablePreDex')
            }
        }

        dependencies {
            compileOnly "androidx.annotation:annotation:${deps.androidX.annotation}"
            compileOnly "org.jetbrains:annotations:${deps.jetbrainsAnnotations}"

            androidTestImplementation "androidx.test:runner:${deps.androidX.test}"
            androidTestImplementation "androidx.test:rules:${deps.androidX.test}"
            androidTestImplementation "org.hamcrest:hamcrest-library:${deps.hamcrest}"
        }

        configurations.all {
            resolutionStrategy {
                force "androidx.annotation:annotation:${deps.androidX.annotation}"
                force "org.jetbrains:annotations:${deps.jetbrainsAnnotations}"
            }
        }
    }

    // configure checkstyle
    apply plugin: 'checkstyle'
    checkstyle {
        toolVersion '7.8.2'
    }
    task checkstyle(type: Checkstyle) {
        configFile rootProject.file('config/checkstyle/checkstyle.xml')
        source 'src'
        include '*/java/**/*.java'
        ignoreFailures false
        showViolations true

        classpath = files()
    }
    afterEvaluate {
        project.tasks.findByName("check")?.dependsOn('checkstyle')
    }

    // configure ktlint
    configurations {
        ktlint
    }
    dependencies {
        // ktlint
        ktlint "com.github.shyiko:ktlint:${deps.ktlint}"
    }
    task ktlint(type: JavaExec, group: "verification") {
        description = "Check Kotlin code style."
        classpath = configurations.ktlint
        main = "com.github.shyiko.ktlint.Main"
        args "src/**/*.kt"
        args "--reporter=plain?group_by_file"
        args "--reporter=checkstyle,output=${buildDir}/reports/ktlint/ktlint.xml"
    }
    afterEvaluate {
        project.tasks.findByName("check")?.dependsOn('ktlint')
    }

    // configure publishing
    apply plugin: 'digital.wup.android-maven-publish'
    task sourcesJar(type: Jar) {
        from android.sourceSets.main.java.srcDirs
    }
    publishing {
        publications {
            release(MavenPublication) {
                from components.android
                pom.withXml {
                    def scm = asNode().appendNode('scm')
                    scm.appendNode('connection', POM_SCM_CONNECTION)
                    scm.appendNode('developerConnection', POM_SCM_CONNECTION)
                }

                artifact sourcesJar {
                    classifier 'sources'
                }
            }
        }
        repositories {
            maven {
                if (project.version.endsWith('-SNAPSHOT')) {
                    url "https://cruglobal.jfrog.io/cruglobal/list/maven-cru-android-public-snapshots-local/"
                } else {
                    url "https://cruglobal.jfrog.io/cruglobal/list/maven-cru-android-public-releases-local/"
                }

                credentials {
                    username cruGlobalMavenRepositoryUsername
                    password cruGlobalMavenRepositoryPassword
                }
            }
        }
    }
}
