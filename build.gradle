buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.2'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
    }
}

// define dependency versions for this project
ext.deps = [
        androidSupport       : '24.2.1',
        androidTestingSupport: '0.5',
        facebookStetho       : '1.4.1',
        gson                 : '2.6.2',
        guava                : '19.0',
        hamcrest             : '1.3',
        jsonUnit             : '1.15.0',
        junit                : '4.12',
        okhttp3              : '3.3.1',
        retrofit2            : '2.0.2',
        thekey               : '1.2.0'
]

subprojects {
    apply plugin: 'com.android.library'

    group 'org.ccci.gto.android'
    version '1.0.2'

    repositories {
        mavenLocal()
        jcenter()
        maven {
            name "maven.gcx.org"
            url "https://maven.gcx.org/"
            credentials {
                username gcxMavenRepositoryUsername
                password gcxMavenRepositoryPassword
            }
        }
    }

    beforeEvaluate {
        android {
            compileSdkVersion 24
            buildToolsVersion "24.0.3"

            defaultConfig {
                minSdkVersion 9
                targetSdkVersion 24

                testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
            }

            adbOptions {
               timeOutInMs 600000
            }
            dexOptions {
                preDexLibraries !project.hasProperty('disablePreDex')
            }
        }

        dependencies {
            compile 'com.android.support:support-annotations:' + deps.androidSupport

            androidTestCompile 'com.android.support.test:runner:' + deps.androidTestingSupport
            androidTestCompile 'com.android.support.test:rules:' + deps.androidTestingSupport
            androidTestCompile 'org.hamcrest:hamcrest-library:' + deps.hamcrest
        }
    }

    // configure checkstyle
    apply plugin: 'checkstyle'
    checkstyle {
        toolVersion '7.0'
    }
    task checkstyle(type: Checkstyle) {
        configFile rootProject.file('checkstyle.xml')
        source 'src'
        include '*/java/**/*.java'
        ignoreFailures false
        showViolations true

        classpath = files()
    }
    afterEvaluate {
        if (project.tasks.findByName('check')) {
            check.dependsOn('checkstyle')
        }
    }

    // configure maven uploadArchives task
    apply from: "$rootProject.projectDir/maven_publish.gradle"
    afterEvaluate { project ->
        artifacts {
            archives artifactSourcesJar
            archives artifactJavadocJar
        }
    }
}
