language: android
dist: trusty
sudo: required
jdk: oraclejdk8
env:
  global:
    - GRADLE_OPTS="-Xms128m -Xmx3072m -Dorg.gradle.jvmargs='-Xms128m'"
    - DEPLOY_USERNAME=travis-ci-android-gto-support
    # DEPLOY_PASSWORD={password}
    - secure: "NpKiD/OhxURch8MhFvVohqNDgS6SVPfjiM2Qm/mQbjLmeEmdlfDQ3lPF+X2HNL960eWulhvpcTPr5TS8eUMUA83U5HBUaADQEnqnHN75oC1OYJtB54ELP2b+vXOEVD3hFQFFnBWsPLJKd6DK8XMpVe+eG+MnmGPM5AWC0a4cw6I="
  matrix:
#    - ANDROID_TARGET=android-15 ANDROID_ABI=armeabi-v7a
    - ANDROID_TARGET=android-16 ANDROID_ABI=armeabi-v7a
    - ANDROID_TARGET=android-21 ANDROID_ABI=armeabi-v7a
    - ANDROID_TARGET=android-22 ANDROID_ABI=armeabi-v7a
#    - ANDROID_TARGET=android-23 ANDROID_ABI=armeabi-v7a
    - ANDROID_TARGET=android-24 ANDROID_ABI=armeabi-v7a
branches:
  only:
  - master
  - /^v\d+(\.\d+){1,}$/

stages:
- compile
- test
- name: deploy
  if: type = push AND (branch = master OR tag =~ /^v\d+(\.\d+){1,}$/)

before_cache:
- rm -f $HOME/.gradle/caches/modules-2/modules-2.lock
- rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
  - $HOME/.android/build-cache
  - $HOME/.gradle/caches/
  - $HOME/.gradle/wrapper/

before_install:
# Install SDK license so Android Gradle plugin can install deps.
- mkdir "$ANDROID_HOME/licenses" || true
- echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > "$ANDROID_HOME/licenses/android-sdk-license"
- echo "d56f5187479451eabf01fb78af6dfcb131a6481e" >> "$ANDROID_HOME/licenses/android-sdk-license"
- echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" >> "$ANDROID_HOME/licenses/android-sdk-license"


install:
# Install the rest of tools (e.g., avdmanager)
- sdkmanager tools
# Install the system image
- sdkmanager "system-images;$ANDROID_TARGET;default;$ANDROID_ABI"
# Create and start emulator for the script. Meant to race the install task.
- echo no | avdmanager create avd --force -n test -k "system-images;$ANDROID_TARGET;default;$ANDROID_ABI"
- $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window &

# gradle options
#  --parallel      : build/test multiple subprojects simultaneously
#  --continue      : continue processing on an error to try and capture all errors
#  --stacktrace    : output stacktraces for failures to aid in debugging
#  --max-workers   : limit the number of workers gradle will spawn
#  --no-daemon     : disable the background gradle build daemon
#  -PdisablePreDex : disable library pre-dex to improve build server performance
- ./gradlew clean assembleAndroidTest -PdisablePreDex --parallel --continue --stacktrace

script:
- android-wait-for-emulator
- adb shell input keyevent 82
- ./gradlew connectedCheck -PdisablePreDex --parallel --continue --stacktrace

jobs:
  fast_finish: true
  include:
  - name: "Build"
    stage: compile

    install: skip
    script: ./gradlew clean assemble --continue --stacktrace --parallel

  - name: "Static Analysis"
    stage: compile

    install: skip
    script: ./gradlew check --continue --stacktrace --parallel

    after_failure:
    - cat /home/travis/build/CruGlobal/android-gto-support/*/build/outputs/lint-results-*.xml

  - name: "Release"
    stage: deploy

    install:
    - echo cruGlobalMavenRepositoryUsername=$DEPLOY_USERNAME >> $HOME/.gradle/gradle.properties
    - echo cruGlobalMavenRepositoryPassword=$DEPLOY_PASSWORD >> $HOME/.gradle/gradle.properties
    script: skip

    deploy:
      provider: script
      skip_cleanup: true
      script: ./gradlew publish --parallel
      on:
        repo: CruGlobal/android-gto-support
        all_branches: true
        jdk: oraclejdk8

  allow_failures:
  - env: ANDROID_TARGET=android-21 ANDROID_ABI=armeabi-v7a
  - env: ANDROID_TARGET=android-22 ANDROID_ABI=armeabi-v7a
notifications:
  email: false
